
bool(True)
bool(False)
print(bool(1)


a = 20
b=20
c = 30

a is b
id(a)  == id(b)

a is not b
3 < 3 

#이하 문자열 복합대입연산자
string = '안녕하세요'   
string += "!"
string += "~"                   
print(string)                 

a = [2, 4, 6, 8, 10]
b = (1, 2, 3)

#대입 연산자 양쪽에는 공백 두기



2-3-1 문자열 관련함수

k = "korea"
type(k)
k[0]
k[-1]
#find: string에서 특정 원소의 위치 찾기
k.find(k)

2-3-2 문자열 관련 함수

k2 = k* 3
k2
#count: string에서 특정 원소의 갯수 세기
k2.count("a")

#startswith: string에서 특정원소로 시작하는 묻는 boolean
k2.startswith("r")
k2.startswith("k")

#endwith는 startswith의 반대
k2.endswith("a")

2-3-3 문자열 관련 함수

# string 대문자로 변환
k2.upper()

k3 = k2.upper()
k3

k3.lower()

s = ' s e o ul    '
k
k2
k3

len(k)
# 이하 내용은 뭐지?? lstrip()은 인자의 문자를 왼쪽에서부터 rstrip()은 오른쪽에서부터 제거.
s.lstrip()
s.rstrip()



2-3-4 문자열 관련 함수

# 알파벳인지를 확인하는 함수
'T'.isalpha()
'$'.isalpha()

# 숫자인지를 확인하는 함수
'7'.isnumeric()

# 알파벳이나 숫자인지를 확인하는 함수
'7'.isalnum()
'b'.isalnum()

2-3-5 문자열 관련 함수

print(s, "가 좋아요!")
# C.replace(a, b) / C라는 객체의 원소 중 a 를 b 로 대체 
s.replace("e", "E")

b1 = '서울이 좋아요!'
b2 = ""
b1, b2

bc = 'kbs mbc sbs ebs ytn'
bc

bc2 = bc.upper()
bc2

type(bc)
type(bc2)

# split() / 인수를 기준으로 객체의 원소를 따로 잘라서 추출
bc3 = bc2.split()
bc3
type(bc3)
len(bc3)

2-3-6 문자열 관련 함수

bc4 = 'kbs/mbc/sbs'
bc4
bc5 = bc4.split("/")
bc5

a = "apple"
a
b = 'banana'
b
a+b
b*4



3장. 컬렉션 - 모아서 관리하자

3-1-1 list 다루기

a = [1, 2, 3]
a
type(a)
len(a)
a[0]
a.append(4)
a.append(5)
a.append(66)
a.append([88, 99])
len(a)
a[6]
a[6][0]
a[6][1]

a.append(100)
a.append(220)
a

# .pop() : 마지막 항목을 빼내어 제거하는 것.
a.pop()

a.insert(2, 7)
a.insert(0, 9)

a.append(2)
a
# remove는 지정된 원소를 앞에서부터 지우는 것.
a.remove(2)
a.count(3)
# 지정된 값의 index를 반환!
a.index(2)
a.clear(x)

3-1-2 list 다루기

a.append(100)
a.append(220)
a.pop()
len(a)
a.insert(2, 7)
a.insert(0, 9)
a
a.reverse()
a
a.sort()
a
a.sort(reverse = False)
a
a.sort(reverse = True)
a
del a

3-1-3 리스트 다루기

a = [1, 3, 5, 7, 9]
ca = a.copy()
ca
a.append(11)
a
ca

b=a
a.append(13)
a.append(15)
a.append(17)
id(a) == id(b)

3-1-4 list 다루기

a[3]
a[5]
a[:3]
a[-6:-3]
b = [21, 23, 25]
len(b)

# extend(): a뒤에 b 리스트를 이어서 붙이는 것/
a.extend(b)
a
a.append(b)
a
